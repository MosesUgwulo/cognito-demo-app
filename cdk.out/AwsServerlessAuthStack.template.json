{
 "Resources": {
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AliasAttributes": [
     "email"
    ],
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/UserPool/Resource"
   }
  },
  "UserPoolAppClientDD0407EC": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/UserPool/AppClient/Resource"
   }
  },
  "AuthServiceApi8CFB7A21": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "Authentication Service RestApi",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": "AuthServiceApi"
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Resource"
   }
  },
  "AuthServiceApiDeployment2EA5C0287cd9e64170020e3bf58a1cb2d1d42cc6": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Authentication Service RestApi",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "DependsOn": [
    "AuthServiceApiauthconfirmsignupOPTIONS65756E9E",
    "AuthServiceApiauthconfirmsignupPOST5F235FEF",
    "AuthServiceApiauthconfirmsignup537C53E9",
    "AuthServiceApiauthOPTIONS8DFC6C71",
    "AuthServiceApiauthF0516E48",
    "AuthServiceApiauthsigninOPTIONS2A0D0BC4",
    "AuthServiceApiauthsigninPOST7E3E38A0",
    "AuthServiceApiauthsignin17EA6462",
    "AuthServiceApiauthsignoutGET2B2655CD",
    "AuthServiceApiauthsignoutOPTIONSB792AD47",
    "AuthServiceApiauthsignout137525BA",
    "AuthServiceApiauthsignupOPTIONS8DCE3F66",
    "AuthServiceApiauthsignupPOST1848032B",
    "AuthServiceApiauthsignup28B7741A",
    "AuthServiceApiOPTIONS9323A1DA"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Deployment/Resource"
   }
  },
  "AuthServiceApiDeploymentStageprodAE29D77D": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AuthServiceApiDeployment2EA5C0287cd9e64170020e3bf58a1cb2d1d42cc6"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/DeploymentStage.prod/Resource"
   }
  },
  "AuthServiceApiOPTIONS9323A1DA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "AuthServiceApi8CFB7A21",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthF0516E48": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AuthServiceApi8CFB7A21",
      "RootResourceId"
     ]
    },
    "PathPart": "auth",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/Resource"
   }
  },
  "AuthServiceApiauthOPTIONS8DFC6C71": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthF0516E48"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignup28B7741A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauthF0516E48"
    },
    "PathPart": "signup",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signup/Resource"
   }
  },
  "AuthServiceApiauthsignupOPTIONS8DCE3F66": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignup28B7741A"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signup/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignupPOSTApiPermissionAwsServerlessAuthStackAuthServiceApi1E655247POSTauthsignup7EAA44C5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SignupFn336C4F73",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodAE29D77D"
       },
       "/POST/auth/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signup/POST/ApiPermission.AwsServerlessAuthStackAuthServiceApi1E655247.POST..auth.signup"
   }
  },
  "AuthServiceApiauthsignupPOSTApiPermissionTestAwsServerlessAuthStackAuthServiceApi1E655247POSTauthsignup9C336983": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SignupFn336C4F73",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/test-invoke-stage/POST/auth/signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signup/POST/ApiPermission.Test.AwsServerlessAuthStackAuthServiceApi1E655247.POST..auth.signup"
   }
  },
  "AuthServiceApiauthsignupPOST1848032B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SignupFn336C4F73",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignup28B7741A"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signup/POST/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignup537C53E9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauthF0516E48"
    },
    "PathPart": "confirm_signup",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/confirm_signup/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignupOPTIONS65756E9E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthconfirmsignup537C53E9"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/confirm_signup/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthconfirmsignupPOSTApiPermissionAwsServerlessAuthStackAuthServiceApi1E655247POSTauthconfirmsignup4D140923": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ConfirmFnA2DFB0E0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodAE29D77D"
       },
       "/POST/auth/confirm_signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/confirm_signup/POST/ApiPermission.AwsServerlessAuthStackAuthServiceApi1E655247.POST..auth.confirm_signup"
   }
  },
  "AuthServiceApiauthconfirmsignupPOSTApiPermissionTestAwsServerlessAuthStackAuthServiceApi1E655247POSTauthconfirmsignup95491442": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ConfirmFnA2DFB0E0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/test-invoke-stage/POST/auth/confirm_signup"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/confirm_signup/POST/ApiPermission.Test.AwsServerlessAuthStackAuthServiceApi1E655247.POST..auth.confirm_signup"
   }
  },
  "AuthServiceApiauthconfirmsignupPOST5F235FEF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ConfirmFnA2DFB0E0",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthconfirmsignup537C53E9"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/confirm_signup/POST/Resource"
   }
  },
  "AuthServiceApiauthsignout137525BA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauthF0516E48"
    },
    "PathPart": "signout",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signout/Resource"
   }
  },
  "AuthServiceApiauthsignoutOPTIONSB792AD47": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignout137525BA"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signout/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsignoutGETApiPermissionAwsServerlessAuthStackAuthServiceApi1E655247GETauthsignout935DF7E3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SignoutFnEA9B2CE3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodAE29D77D"
       },
       "/GET/auth/signout"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signout/GET/ApiPermission.AwsServerlessAuthStackAuthServiceApi1E655247.GET..auth.signout"
   }
  },
  "AuthServiceApiauthsignoutGETApiPermissionTestAwsServerlessAuthStackAuthServiceApi1E655247GETauthsignoutBD8BB1B9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SignoutFnEA9B2CE3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/test-invoke-stage/GET/auth/signout"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signout/GET/ApiPermission.Test.AwsServerlessAuthStackAuthServiceApi1E655247.GET..auth.signout"
   }
  },
  "AuthServiceApiauthsignoutGET2B2655CD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SignoutFnEA9B2CE3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignout137525BA"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signout/GET/Resource"
   }
  },
  "AuthServiceApiauthsignin17EA6462": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AuthServiceApiauthF0516E48"
    },
    "PathPart": "signin",
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signin/Resource"
   }
  },
  "AuthServiceApiauthsigninOPTIONS2A0D0BC4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignin17EA6462"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signin/OPTIONS/Resource"
   }
  },
  "AuthServiceApiauthsigninPOSTApiPermissionAwsServerlessAuthStackAuthServiceApi1E655247POSTauthsignin532A1B11": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SigninFnBC3BA31F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/",
       {
        "Ref": "AuthServiceApiDeploymentStageprodAE29D77D"
       },
       "/POST/auth/signin"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signin/POST/ApiPermission.AwsServerlessAuthStackAuthServiceApi1E655247.POST..auth.signin"
   }
  },
  "AuthServiceApiauthsigninPOSTApiPermissionTestAwsServerlessAuthStackAuthServiceApi1E655247POSTauthsigninC0A0FC36": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SigninFnBC3BA31F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AuthServiceApi8CFB7A21"
       },
       "/test-invoke-stage/POST/auth/signin"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signin/POST/ApiPermission.Test.AwsServerlessAuthStackAuthServiceApi1E655247.POST..auth.signin"
   }
  },
  "AuthServiceApiauthsigninPOST7E3E38A0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SigninFnBC3BA31F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AuthServiceApiauthsignin17EA6462"
    },
    "RestApiId": {
     "Ref": "AuthServiceApi8CFB7A21"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthServiceApi/Default/auth/signin/POST/Resource"
   }
  },
  "SignupFnServiceRoleB51FBFF1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/SignupFn/ServiceRole/Resource"
   }
  },
  "SignupFn336C4F73": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "bda58344c4be036bfc04193f99485940f45d8a5c33e816ab712b46e69b9f2ac4.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "SignupFnServiceRoleB51FBFF1",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "SignupFnServiceRoleB51FBFF1"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/SignupFn/Resource",
    "aws:asset:path": "asset.bda58344c4be036bfc04193f99485940f45d8a5c33e816ab712b46e69b9f2ac4",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ConfirmFnServiceRole1655CA55": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/ConfirmFn/ServiceRole/Resource"
   }
  },
  "ConfirmFnA2DFB0E0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "de11d1d66c1404b2ecdd7ad206fb2a201dce5062e132feca906d67852722d189.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "ConfirmFnServiceRole1655CA55",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "ConfirmFnServiceRole1655CA55"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/ConfirmFn/Resource",
    "aws:asset:path": "asset.de11d1d66c1404b2ecdd7ad206fb2a201dce5062e132feca906d67852722d189",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SignoutFnServiceRole3AF7B732": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/SignoutFn/ServiceRole/Resource"
   }
  },
  "SignoutFnEA9B2CE3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5d9515a87ad00748838adf9864c3d06aae1cd24b53836573de4de94d16500711.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "SignoutFnServiceRole3AF7B732",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "SignoutFnServiceRole3AF7B732"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/SignoutFn/Resource",
    "aws:asset:path": "asset.5d9515a87ad00748838adf9864c3d06aae1cd24b53836573de4de94d16500711",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SigninFnServiceRole084C9885": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/SigninFn/ServiceRole/Resource"
   }
  },
  "SigninFnBC3BA31F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "f3cd1f462594464f1356b581cea4471c5d169260936727a3f66c45df888b42ae.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "SigninFnServiceRole084C9885",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "SigninFnServiceRole084C9885"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/SigninFn/Resource",
    "aws:asset:path": "asset.f3cd1f462594464f1356b581cea4471c5d169260936727a3f66c45df888b42ae",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AppApiE7BADA01": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "App RestApi",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": "AppApi"
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Resource"
   }
  },
  "AppApiDeployment7658F313f3bbf1263d818c3073afa28dbcb1b48d": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "App RestApi",
    "RestApiId": {
     "Ref": "AppApiE7BADA01"
    }
   },
   "DependsOn": [
    "AppApiOPTIONS26B60D0C",
    "AppApiprotectedGET82227590",
    "AppApiprotectedOPTIONSBBC5239D",
    "AppApiprotected326364E3",
    "AppApipublicGET4A8586C5",
    "AppApipublicOPTIONSA946398B",
    "AppApipublicED08BA99"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Deployment/Resource"
   }
  },
  "AppApiDeploymentStageprod4B09D08C": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AppApiDeployment7658F313f3bbf1263d818c3073afa28dbcb1b48d"
    },
    "RestApiId": {
     "Ref": "AppApiE7BADA01"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/DeploymentStage.prod/Resource"
   }
  },
  "AppApiOPTIONS26B60D0C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "AppApiE7BADA01",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "AppApiE7BADA01"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/OPTIONS/Resource"
   }
  },
  "AppApiprotected326364E3": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AppApiE7BADA01",
      "RootResourceId"
     ]
    },
    "PathPart": "protected",
    "RestApiId": {
     "Ref": "AppApiE7BADA01"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/protected/Resource"
   }
  },
  "AppApiprotectedOPTIONSBBC5239D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AppApiprotected326364E3"
    },
    "RestApiId": {
     "Ref": "AppApiE7BADA01"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/protected/OPTIONS/Resource"
   }
  },
  "AppApiprotectedGETApiPermissionAwsServerlessAuthStackAppApi148C24F5GETprotectedEDC2E85B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProtectedFn08517F55",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AppApiE7BADA01"
       },
       "/",
       {
        "Ref": "AppApiDeploymentStageprod4B09D08C"
       },
       "/GET/protected"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/protected/GET/ApiPermission.AwsServerlessAuthStackAppApi148C24F5.GET..protected"
   }
  },
  "AppApiprotectedGETApiPermissionTestAwsServerlessAuthStackAppApi148C24F5GETprotected8C485F67": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProtectedFn08517F55",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AppApiE7BADA01"
       },
       "/test-invoke-stage/GET/protected"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/protected/GET/ApiPermission.Test.AwsServerlessAuthStackAppApi148C24F5.GET..protected"
   }
  },
  "AppApiprotectedGET82227590": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "RequestAuthorizer7473A0B3"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ProtectedFn08517F55",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AppApiprotected326364E3"
    },
    "RestApiId": {
     "Ref": "AppApiE7BADA01"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/protected/GET/Resource"
   }
  },
  "AppApipublicED08BA99": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AppApiE7BADA01",
      "RootResourceId"
     ]
    },
    "PathPart": "public",
    "RestApiId": {
     "Ref": "AppApiE7BADA01"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/public/Resource"
   }
  },
  "AppApipublicOPTIONSA946398B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AppApipublicED08BA99"
    },
    "RestApiId": {
     "Ref": "AppApiE7BADA01"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/public/OPTIONS/Resource"
   }
  },
  "AppApipublicGETApiPermissionAwsServerlessAuthStackAppApi148C24F5GETpublicC8BBB901": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PublicFn6A30F5E5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AppApiE7BADA01"
       },
       "/",
       {
        "Ref": "AppApiDeploymentStageprod4B09D08C"
       },
       "/GET/public"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/public/GET/ApiPermission.AwsServerlessAuthStackAppApi148C24F5.GET..public"
   }
  },
  "AppApipublicGETApiPermissionTestAwsServerlessAuthStackAppApi148C24F5GETpublic04789B46": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PublicFn6A30F5E5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AppApiE7BADA01"
       },
       "/test-invoke-stage/GET/public"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/public/GET/ApiPermission.Test.AwsServerlessAuthStackAppApi148C24F5.GET..public"
   }
  },
  "AppApipublicGET4A8586C5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PublicFn6A30F5E5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AppApipublicED08BA99"
    },
    "RestApiId": {
     "Ref": "AppApiE7BADA01"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AppApi/Default/public/GET/Resource"
   }
  },
  "ProtectedFnServiceRole25BFD54C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/ProtectedFn/ServiceRole/Resource"
   }
  },
  "ProtectedFn08517F55": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c6b259c1b8e55a7f13b276d0d68fa0ef1b835d4a7d657fefe2a272723fd547a7.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "ProtectedFnServiceRole25BFD54C",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "ProtectedFnServiceRole25BFD54C"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/ProtectedFn/Resource",
    "aws:asset:path": "asset.c6b259c1b8e55a7f13b276d0d68fa0ef1b835d4a7d657fefe2a272723fd547a7",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "PublicFnServiceRoleF3FDF518": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/PublicFn/ServiceRole/Resource"
   }
  },
  "PublicFn6A30F5E5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "34190b82f0c2c36b5cd4299846586c1687878ba06784c55b040f0c15b86a963d.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "PublicFnServiceRoleF3FDF518",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "PublicFnServiceRoleF3FDF518"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/PublicFn/Resource",
    "aws:asset:path": "asset.34190b82f0c2c36b5cd4299846586c1687878ba06784c55b040f0c15b86a963d",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AuthorizerFnServiceRole91AE9242": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthorizerFn/ServiceRole/Resource"
   }
  },
  "AuthorizerFn97B9AA7C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "cd2096f03f97fabe4e5f6a72c1cc10e00e5fef3368e9bfd6bfb25d8ea3c27ae1.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "CLIENT_ID": {
       "Ref": "UserPoolAppClientDD0407EC"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "AuthorizerFnServiceRole91AE9242",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "AuthorizerFnServiceRole91AE9242"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthorizerFn/Resource",
    "aws:asset:path": "asset.cd2096f03f97fabe4e5f6a72c1cc10e00e5fef3368e9bfd6bfb25d8ea3c27ae1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AuthorizerFnAwsServerlessAuthStackRequestAuthorizerB75206C1PermissionsC8FB5DBF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthorizerFn97B9AA7C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AppApiE7BADA01"
       },
       "/authorizers/",
       {
        "Ref": "RequestAuthorizer7473A0B3"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/AuthorizerFn/AwsServerlessAuthStackRequestAuthorizerB75206C1:Permissions"
   }
  },
  "RequestAuthorizer7473A0B3": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "AuthorizerResultTtlInSeconds": 0,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "AuthorizerFn97B9AA7C",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":apigateway:",
       {
        "Fn::Select": [
         3,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "AuthorizerFn97B9AA7C",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "AuthorizerFn97B9AA7C",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": "method.request.header.cookie",
    "Name": "AwsServerlessAuthStackRequestAuthorizerB75206C1",
    "RestApiId": {
     "Ref": "AppApiE7BADA01"
    },
    "Type": "REQUEST"
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/RequestAuthorizer/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VRwVKDMBT8Fu8hWr1wbXG8qR0cz0wanvggJJiX2KkM/25eAVtPu293k7eZ3Ms8l3c36kiZrrvM4EGOb0HpTiSpGrVrLAYnx3cCv3fOiOLD/vGVFAbBhmtrViahBmxUgKM6ybEECtsBObbSRxiMO/XL4aspVWiAtZmkvItew04RiGcIn65mc2Gru9w88xK+Im+JKeLxBzy7l2kSRvWHWskxyXvwPRKhsxx6ilaHxNdIZV0NLcmXM6yuQNWnNzkzr004CXqoFBEEkluGNMtd1B0E7j1x7jWGIYZL43OO34i2+Vc/8cLZGuci3EC2dPu9yeWG/6slxMxHG7AHWc74C58iHnXLAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "AwsServerlessAuthStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "AuthServiceApiEndpoint7E6B8279": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AuthServiceApi8CFB7A21"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AuthServiceApiDeploymentStageprodAE29D77D"
      },
      "/"
     ]
    ]
   }
  },
  "AppApiEndpoint979256A8": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AppApiE7BADA01"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AppApiDeploymentStageprod4B09D08C"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}